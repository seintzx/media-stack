# Network configuration
networks:
  media:
    name: media
    driver: bridge
  wireguard_network:
    driver: bridge
    internal: true

# Common configuration for most containers
x-commons: &commons
  environment:
    TZ: ${TZ}
    PUID: ${PUID}
    PGID: ${PGID}
  restart: unless-stopped
  labels:
    - "com.centurylinklabs.watchtower.enable=true"

services:
  # Management UI and monitoring tools
  portainer:
    <<: *commons
    image: portainer/portainer-ce:latest
    container_name: portainer
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${CONFIGDIR}/portainer:/data
    ports:
      - 9000:9000
    networks:
      - media

  watchtower:
    <<: *commons
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${CONFIGDIR}/watchtower:/config
    environment:
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_REMOVE_VOLUMES: "true"
      WATCHTOWER_INCLUDE_STOPPED: "true"
      WATCHTOWER_NO_STARTUP_MESSAGE: "false"
      WATCHTOWER_SCHEDULE: "0 0 6 * * *"
      WATCHTOWER_LABEL_ENABLE: "true"
    networks:
      - media

  # Media services
  jellyfin:
    <<: *commons
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    network_mode: "host"
    volumes:
      - ${CONFIGDIR}/jellyfin:/config
      - ${MEDIADIR}/tv:/tv
      - ${MEDIADIR}/movies:/movies
    ports:
      - 8096:8096
    restart: unless-stopped
    environment:
      TZ: ${TZ}
      PUID: ${PUID}
      PGID: ${PGID}
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  # Services going through wireguard
  qbittorrent:
    <<: *commons
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    volumes:
      - ${CONFIGDIR}/torrent:/config
      - ${MEDIADIR}/downloads:/downloads
    ports:
      - 8080:8080
      - 6881:6881
      - 6881:6881/udp
    networks:
      - wireguard_network

  sonarr:
    <<: *commons
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    volumes:
      - ${CONFIGDIR}/sonarr:/config
      - ${MEDIADIR}/tv:/tv
      - ${MEDIADIR}/downloads:/downloads
    ports:
      - 8989:8989
    networks:
      - wireguard_network

  radarr:
    <<: *commons
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    volumes:
      - ${CONFIGDIR}/radarr:/config
      - ${MEDIADIR}/movies:/movies
      - ${MEDIADIR}/downloads:/downloads
    ports:
      - 7878:7878
    networks:
      - wireguard_network

  bazarr:
    <<: *commons
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    volumes:
      - ${CONFIGDIR}/bazarr:/config
      - ${MEDIADIR}/movies:/movies
      - ${MEDIADIR}/tv:/tv
    ports:
      - 6767:6767
    networks:
      - wireguard_network

  prowlarr:
    <<: *commons
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    volumes:
      - ${CONFIGDIR}/prowlarr:/config
    ports:
      - 9696:9696
    networks:
      - wireguard_network

  # Networking & security
  wireguard:
    <<: *commons
    image: lscr.io/linuxserver/wireguard
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    volumes:
      - ${CONFIGDIR}/wireguard:/config
      - /lib/modules:/lib/modules
    ports:
      - "51820:51820/udp"
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    healthcheck:
      test: ["CMD", "ping", "-c", "1", "8.8.8.8"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - wireguard_network

  adguard:
    <<: *commons
    image: adguard/adguardhome
    container_name: adguard
    depends_on:
      wireguard:
        condition: service_healthy
    volumes:
      - ${CONFIGDIR}/adguard/work:/opt/adguardhome/work
      - ${CONFIGDIR}/adguard/conf:/opt/adguardhome/conf
    restart: unless-stopped
    network_mode: "host"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      retries: 3
      start_period: 10s
